[build-system]
requires = ["setuptools>=68.2.2", "wheel>=0.38", "pip>=25.0"]
build-backend = "setuptools.build_meta"

[project]
name = "medai_ner"
version = "1.0.0"
description = "German Medical Named Entity Recognition Service"
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
authors = [
  { name = "MedAI Team", email = "team@medai.example.com" }
]
maintainers = [
  { name = "MedAI Team", email = "team@medai.example.com" }
]
keywords = [
  "nlp", "ner", "medical", "german", "spacy", "fastapi",
  "entity-recognition", "icd", "healthcare", "ai"
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Healthcare Industry",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Medical Science Applications",
  "Topic :: Text Processing :: Linguistic",
  "Typing :: Typed",
]
requires-python = ">=3.11,<3.13"

dependencies = [
  "fastapi==0.104.1",
  "uvicorn[standard]==0.24.0",  
  "pydantic==1.10.24",
  "python-multipart==0.0.6",
  "spacy==3.7.6",
  "spacy-transformers==1.3.5", 
  "transformers==4.36.0",
  "tokenizers>=0.13.3,<0.19",
  "torch==2.2.0+cpu",
  "numpy==1.26.4",
  "scikit-learn==1.7.2",
  "aiohttp==3.12.15",
  "aiofiles==24.1.0",
  "httpx==0.25.2",
  "psutil==6.0.0",
  "regex>=2023.0.0"
]

[project.optional-dependencies]
dev = [
  "pytest==7.4.3",
  "pytest-asyncio==0.21.1",
  "pytest-cov==4.1.0",
  "black==23.11.0",
  "flake8==6.1.0",
  "mypy==1.7.1",
  "pre-commit==4.3.0",
  "isort==6.1.0",
  "bandit==1.8.6",
  "safety==3.2.9",
]
docs = [
  "mkdocs==1.6.1",
  "mkdocs-material==9.6.21",
  "mkdocstrings[python]==0.30.1",
]
test = [
  "pytest==7.4.3",
  "pytest-asyncio==0.21.1",
  "pytest-cov==4.1.0",
  "pytest-mock==3.15.1",
  "httpx==0.25.2",
]
all = [
  "medai_ner[dev,docs,test]"
]

[project.urls]
Homepage = "https://github.com/AteetVatan/medai_ner"
Documentation = "https://ateetvatan.github.io/medai_ner"
Repository = "https://github.com/AteetVatan/medai_ner.git"
Issues = "https://github.com/AteetVatan/medai_ner/issues"
Changelog = "https://github.com/AteetVatan/medai_ner/blob/main/CHANGELOG.md"

[project.scripts]
medai-nlp = "main:main"
medai-nlp-dev = "run:main"

# ---------------------
# Tool Config Sections
# ---------------------

[tool.setuptools]
include-package-data = true
py-modules = ["main", "ner_service", "model_loader", "config", "example_usage"]

# Discover packages automatically
[tool.setuptools.packages.find]
where = ["."]
include = ["api", "tests"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json", "*.toml"]

[tool.setuptools.exclude-package-data]
"*" = ["__pycache__", "*.pyc", "*.pyo", "*.pyd", ".git*", "*.log"]

[tool.black]
line-length = 88
target-version = ["py311", "py312"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["api", "ner_service"]
known_third_party = ["fastapi", "spacy", "transformers", "torch", "numpy", "scikit-learn", "aiohttp", "httpx"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.12"
strict = true
show_error_codes = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
  "--strict-markers",
  "--strict-config", 
  "--verbose",
  "--tb=short",
  "--cov=.",
  "--cov-report=term-missing",
  "--cov-report=html:htmlcov",
  "--cov-report=xml",
  "--cov-fail-under=80"
]
testpaths = ["tests"]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests",
  "api: marks tests as API tests",
  "model: marks tests as model tests",
]
asyncio_mode = "auto"
filterwarnings = [
  "error",
  "ignore::UserWarning",
  "ignore::DeprecationWarning",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
  ".git",
  "__pycache__",
  "build",
  "dist",
  "*.egg-info",
  ".venv",
  "venv",
  ".env",
  "htmlcov",
  ".pytest_cache",
  ".mypy_cache",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.pre-commit]
repos = [
  { repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.5.0", hooks = [{ id = "trailing-whitespace" }, { id = "end-of-file-fixer" }, { id = "check-yaml" }, { id = "check-added-large-files" }, { id = "check-merge-conflict" }, { id = "debug-statements" }] },
  { repo = "https://github.com/psf/black", rev = "23.11.0", hooks = [{ id = "black" }] },
  { repo = "https://github.com/pycqa/isort", rev = "5.12.0", hooks = [{ id = "isort" }] },
  { repo = "https://github.com/pycqa/flake8", rev = "6.1.0", hooks = [{ id = "flake8" }] },
  { repo = "https://github.com/pre-commit/mirrors-mypy", rev = "v1.7.1", hooks = [{ id = "mypy", additional_dependencies = ["types-requests"] }] }
]
